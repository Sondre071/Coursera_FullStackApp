@page "/fetchproducts"
@using System.Text.Json

<h3>Product List</h3>

<ul>
    @if (isLoading)
    {
        <li>Loading...</li>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <li style="color:red">@errorMessage</li>
    }
    else if (products is not null && products.Length > 0)
    {
        foreach (var product in products)
        {
            <li>
                <span>@product.Name - $@product.Price</span>
                <p>Stock: @product.Stock</p>
            </li>
        }
    }
    else
    {
        <li>No products found.</li>
    }
</ul>


@code {
    private Product[]? products;
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // I could not get the urls to work, had to make a new client.
            var client = new HttpClient();
            var response = await client.GetAsync("http://localhost:5127/api/productList");

            response.EnsureSuccessStatusCode();

            var json = await response.Content.ReadAsStringAsync();

            // Reduce errors by allowing different casings.
            var options = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };

            products = JsonSerializer.Deserialize<Product[]>(json, options) ?? Array.Empty<Product>();
        }

        // Handles errors in fetching data
        catch (HttpRequestException ex)
        {
            Console.Error.WriteLine(ex);
            errorMessage = "Could not fetch products. Please try again later.";
            products = Array.Empty<Product>();
        }

        // Handles any other errors.
        catch (Exception ex)
        {
            Console.Error.WriteLine(ex);
            errorMessage = "Unexpected error occurred.";
            products = Array.Empty<Product>();
        }
        finally
        {
            isLoading = false;
        }
    }

    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public double Price { get; set; }
        public int Stock { get; set; }
    }
}
